Question 1: RFM Analysis (3 points) RFM model uses sales data to segment a pool of customers based on their purchasing behavior. The resulting customer segments are neatly ordered from most valuable to least valuable. This makes it straightforward to identify best customers.
Câu hỏi 1: Phân tích RFM (3 điểm) Mô hình RFM sử dụng dữ liệu bán hàng để phân khúc nhóm khách hàng dựa trên hành vi mua hàng của họ. Các phân khúc khách hàng thu được được sắp xếp gọn gàng từ giá trị cao nhất đến ít giá trị nhất. Điều này giúp dễ dàng xác định những khách hàng tốt nhất.

each customer record you must maintain three pieces of information
mỗi hồ sơ khách hàng bạn phải duy trì ba thông tin

a) Recency-The interval from the date of making statistics (2/6/2005) to the date of the most recent purchase by the customer. 
a) Lần gần đây nhất - Khoảng thời gian từ ngày thống kê (6/2/2005) đến ngày khách hàng mua hàng gần đây nhất.


b) A counter for the Frequency-the number of times the customer has made an order. 
b) Bộ đếm Tần suất - số lần khách hàng đặt hàng.

c) A counter for the Monetary amount-the total money that the customer has ordered. 
c) Bộ đếm số tiền - tổng số tiền khách hàng đã đặt.
Using classicmodel database, please write 1 query that calculates the above 3 indexes for each customer who has ever ordered on the system. The output has the following format: CustomerName, CustomerNumber, Recency, Frequency, Monetary. 
Sử dụng cơ sở dữ liệu classicmodel viết 1 truy vấn tính 3 chỉ số trên cho mỗi khách hàng đã từng đặt hàng trên hệ thống. Đầu ra có định dạng sau: Tên khách hàng, Số khách hàng, Lần truy cập gần đây, Tần suất, Tiền tệ.
-- ----------------------------------------------------------------------------------------------------------------------
-- a
select * from customers;
SELECT c.customerName,
	(SELECT DATEDIFF("2005/06/02", MAX(orderDate))
	FROM orders
	WHERE customerNumber = c.customerNumber
	) AS Recency	
FROM customers c;
-- b
SELECT c.customerName,
(SELECT COUNT(*) 
FROM orders
WHERE customerNumber = c.customerNumber
GROUP BY customerNumber
) AS Frequency  
FROM customers c;
-- c
SELECT c.customerName,
(SELECT SUM(quantityOrdered * priceEach)
FROM orderdetails
WHERE orderNumber IN (SELECT orderNumber
				       FROM orders
			                   WHERE customerNumber = c.customerNumber)
			                   
	) AS Monetary

FROM customers c;

-- chung 1 bang 
SELECT c.customerName,
	(SELECT DATEDIFF("2005/06/02", MAX(orderDate))
	FROM orders
	WHERE customerNumber = c.customerNumber
	) AS Recency		,


(SELECT COUNT(*) 
FROM orders
WHERE customerNumber = c.customerNumber
GROUP BY customerNumber
) AS Frequency         ,

 
(SELECT SUM(quantityOrdered * priceEach)
FROM orderdetails
WHERE orderNumber IN (SELECT orderNumber
				       FROM orders
			                   WHERE customerNumber = c.customerNumber)
			                   
	) AS Monetary
FROM customers c;


-- k muon hien thi NULL
SELECT c.customerName,
	(SELECT DATEDIFF("2005/06/02", MAX(orderDate))
	FROM orders
	WHERE customerNumber = c.customerNumber
	) AS Recency		,


(SELECT COUNT(*) 
FROM orders
WHERE customerNumber = c.customerNumber
GROUP BY customerNumber
) AS Frequency         ,

 
(SELECT SUM(quantityOrdered * priceEach)
FROM orderdetails
WHERE orderNumber IN (SELECT orderNumber
				       FROM orders
			                   WHERE customerNumber = c.customerNumber
	) AND (quantityOrdered IS NOT NULL) AND (priceEach IS NOT NULL) 
			                   
	) AS Monetary
FROM customers c where (SELECT SUM(quantityOrdered * priceEach)
FROM orderdetails
WHERE orderNumber IN (SELECT orderNumber
				       FROM orders
			                   WHERE customerNumber = c.customerNumber
	) AND (quantityOrdered IS NOT NULL) AND (priceEach IS NOT NULL) 
			                   
	) is not null;
-- 98 dong k co NULL
